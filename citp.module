<?php

use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Access\AccessResult;

function citp_file_download($uri) {
  if (Drupal::currentUser()->isAnonymous()) {
    $response = new RedirectResponse('/saml_login?destination=' . file_url_transform_relative(file_create_url($uri)));
    $response->send();
  } else {
    $fields = [
      'uid' => Drupal::currentUser()->id(),
      'file_url' => file_url_transform_relative(file_create_url($uri)),
      'timestamp' => \Drupal::time()->getRequestTime(), 
    ];
  $database = \Drupal::database();
  $database->insert('citp_file_downloads')->fields($fields)->execute();
  }
}

function citp_node_access(\Drupal\node\NodeInterface $node, $op, \Drupal\Core\Session\AccountInterface $account) {
  //$type = $node->getType();
  $is_front = \Drupal::service('path.matcher')->isFrontPage();
  $current_path = \Drupal::service('path.current')->getPath(); // Gets internal path - for eg /node/29.
  $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);

  if (($is_front) || ($path_alias == '/about')) {
    return AccessResult::neutral();
  } else {
    if (\Drupal::currentUser()->isAnonymous()) {
      return AccessResult::forbidden();
    } else {
      return AccessResult::neutral();
    }
  }
}

use Drupal\Core\Database\Query\AlterableInterface;

/**
 * Implements hook_query_TAG_alter(): tag search_$type with $type node_search.
 */
function citp_query_search_node_search_alter(AlterableInterface $query) {
  // For testing purposes, restrict the query to node type 'article' only.
  $query->condition('n.type', array('it_effort', 'page'), 'IN');
}
